/*
 * This Java source file was generated by the Gradle 'init' task.
 */
 
import java.util.Arrays;
public class Library {
    public boolean LibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        System.out.println("--- First function ---");
        roll(4);
        System.out.println("-------------------\n\n");


        System.out.println("--- Second function ---");
        int [] givinArray={1,2,3,4,5,5};
        System.out.println("Is there any duplicate inside the provided array ?"+ Duplicates(givinArray));
        System.out.println("-------------------\n\n");


        System.out.println("--- Third function ---");
        int [] AvgArray={3,6,9,12};
        System.out.println("The average for the provided array elements is : "+ average(AvgArray));
        System.out.println("-------------------\n\n");


        System.out.println("--- Fourth function ---");
        int [][] LowArray={
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println("The Lowest average array is : ");
       System.out.println(Arrays.toString(LowestAverage(LowArray)));
        System.out.println("-------------------\n\n");

    }

    public static int [] roll(int n){
        int [] arr=new int[n];
        int min=1;
        int max=6;

        for (int i=0; i<n;i++){
            arr[i]=min + (int)(Math.random() * ((max - min) + 1));;
        }
         System.out.println(Arrays.toString(arr));
        return arr;
    }


    public static boolean Duplicates(int [] givinArray){
      for (int i = 0; i < givinArray.length; i++) {
            for (int j = 0; j < givinArray.length; j++) {
                if (i != j) {
                    if (givinArray[i] == givinArray[j]) {
                        return true;
                    }
                }
            }
        }
            return false;
    }



    public static double average(int [] arr){
        double avg=0;
        int sum=0;
        int lengthOfArr=arr.length;
        for (int i = 0; i < arr.length; i++) {
            sum+=arr[i];
        }
        avg=(double) sum/lengthOfArr;
        return avg;
    }




    public static int[] LowestAverage(int [][] Array){
         double sum = 0;
            double avg = 0;
            double lowAvg = 0;
            int index = 0;

            for (int i = 0; i < Array.length; i++) {
                for (int j = 0; j < Array[i].length; j++) {
                    sum += Array[i][j];
                    avg = sum / Array[i].length;
                    if (i == 0) {
                        lowAvg = avg;
                    }
                }
                if (avg < lowAvg) {
                    lowAvg = avg;
                    index = i;
                }
                sum = 0;
                avg = 0;
            }
            return Array[index];
        }
    }