/*
 * This Java source file was generated by the Gradle 'init' task.
 */


import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }

    public static void main(String[] args) {
        //calling the first function and printing the acceptedArray
 System.out.println("--- lab2 ---\n\n");
        System.out.println("--- First function ---");
        roll(4);
        System.out.println("-------------------\n\n");

        //calling the second function and printing the return value
        // that will be a true if there's a duplicating inside the sent array otherwise the value will be false
       System.out.println("--- Second function ---");
        int [] givinArray={1,2,3,4,5,5};
        System.out.println("Is there any duplicate inside the provided array ?"+ Duplicates(givinArray));
        System.out.println("-------------------\n\n");


          System.out.println("--- Third function ---");
        int [] AvgArray={3,6,9,12};
        System.out.println("The average for the provided array elements is : "+ average(AvgArray));
        System.out.println("-------------------\n\n");


        System.out.println("--- Fourth function ---");
        int [][] LowArray={
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println("The Lowest average array is : ");
       System.out.println(Arrays.toString(LowestAverage(LowArray)));
        System.out.println("-------------------\n\n");

 System.out.println("--- lab3 ---\n\n");
        System.out.println("--- Fifth function ---");
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        System.out.println(analyzeWeather(weeklyMonthTemperatures));
        System.out.println("-------------------\n\n");



        System.out.println("--- Sixth function ---");
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Hedge");
        System.out.println(tally(votes) + " received the most votes!");
        System.out.println("-------------------\n\n");

    }


    //------- First function ------
    public static int [] roll(int n){
        int [] arr=new int[n];
        int min=1;
        int max=6;

        for (int i=0; i<n;i++){
            arr[i]=min + (int)(Math.random() * ((max - min) + 1));;
        }
         System.out.println(Arrays.toString(arr));
        return arr;
    }
    // -----------------------------------


    //------- 2nd function ------         
    public static boolean Duplicates(int [] givinArray){
      for (int i = 0; i < givinArray.length; i++) {
            for (int j = 0; j < givinArray.length; j++) {
                if (i != j) {
                    if (givinArray[i] == givinArray[j]) {
                        return true;
                    }
                }
            }
        }
            return false;
    }
    // ----------------------------------




    //------- 3rd function ------  
    public static double average(int [] arr){
        double avg=0;
        int sum=0;
        int lengthOfArr=arr.length;
        for (int i = 0; i < arr.length; i++) {
            sum+=arr[i];
        }
        avg=(double) sum/lengthOfArr;
        return avg;
    }
    // ----------------------------------


    //------- 4th function ------ 
    public static int[] LowestAverage(int [][] Array){
         double sum = 0;
            double avg = 0;
            double lowAvg = 0;
            int index = 0;

            for (int i = 0; i < Array.length; i++) {
                for (int j = 0; j < Array[i].length; j++) {
                    sum += Array[i][j];
                    avg = sum / Array[i].length;
                    if (i == 0) {
                        lowAvg = avg;
                    }
                }
                if (avg < lowAvg) {
                    lowAvg = avg;
                    index = i;
                }
                sum = 0;
                avg = 0;
            }
            return Array[index];
        }
     // ----------------------------------   


    //------- 5th function ------ 
 public static String analyzeWeather(int[][] array){
        HashSet<Integer> Num  = new HashSet<>();
        for (int i=0;i<array.length;i++){
            for (int j=0;j<array[i].length;j++){
                Num.add(array[i][j]);
            }
        }
        List<Integer> places = new ArrayList<>(Num);
        Collections.sort(places);
        int min =Collections.min(Num);
        int max =Collections.max(Num);
        System.out.println("High: " + max );
        System.out.print("Low: " + min );
        String output="";
        for (int i=min;i<=max;i++){
            if (!places.contains(i)){
                output+="\nNever saw temperature:"+i;
            }
        }
        return output;
    }
    // ----------------------------------


    //------- 6th function ------ 
    public static String tally(List<String> votes ){
        HashMap<String,Integer> result=new HashMap<String,Integer>();

        for (String item :
                votes) {
            if(!result.containsKey(item)){
                result.put(item,1);
            }
            else {
                result.put(item,result.get(item)+1);
            }
        }
        int Votes=0;
        String NameOfWinner="";
        for (String value :
                result.keySet()) {
            if(result.get(value)>Votes){
                Votes=result.get(value);
                NameOfWinner=value;
            }
                }
        return NameOfWinner;
    }
    // ----------------------------------
}